{
	"scopeName": "text.sourcepawn-misc",
	"patterns": [
		{
      "include": "#keys"
    },
		{
      "include": "#value"
    },
		{
			"include": "#keywords"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#comments"
		}
	],
	"repository": {
		"keys": {
      "patterns": [
        {
					"comment": "This matches keys with or without trailing comments.",
          "name": "support.type.property-name.single.sp-translations",
          "match": "^\\s*('[^']*')(\n|\\s*\/\/.*)$",
					"captures" : {
						"1":{
							"name": "support.type.property-name.double.sp-translations"
						},
						"2":{
							"name": "comment.line.double-slash"
						}
					}
        },
        {
          "name": "support.type.property-name.double.sp-translations",
          "match": "^\\s*(\"[^\"]*\")(\n|\\s*\/\/.*)$",
					"captures" : {
						"1":{
							"name": "support.type.property-name.double.sp-translations"
						},
						"2":{
							"name": "comment.line.double-slash"
						}
					}
        }
      ]
    },
		"value": {
      "patterns": [
        {
          "name": "string.quoted.single.sp-translations",
          "begin": "'",
          "end": "'|\\n",
          "patterns": [
            {
              "name": "constant.character.sp-translations",
              "match": "\\{[0-9]+\\}"
            }
          ]
        },
        {
          "name": "string.quoted.double.sp-translations",
          "match": "(\"[^\"]+\")\\s*(\"[^\"]*\")",
          "captures": {
            "1": {
              "name": "support.type.property-name.double.sp-translations"
            },
						"2": {
              "name": "string.quoted.double.sp-translations",
							"patterns": [
								{
									"name": "constant.character.sp-translations",
									"match": "\\{([\\d]+)\\}",
									"captures": {
										"1": {
											"name": "constant.numeric.sp-translations"
										}
									}
								},
								{
									"name": "constant.character.sp-translations",
									"match": "\\{([A-Za-z]+)\\}",
									"captures": {
										"1": {
											"name": "constant.character.escape.sp-translations"
										}
									}
								},
								{
									"name": "constant.character.sp-translations",
									"match": "\\{([\\d]+):([A-Za-z]+)\\}",
									"captures": {
										"1": {
											"name": "constant.numeric.sp-translations"
										},
										"2": {
											"name": "string.regexp.sp-translations"
										}
									}
								}
							]
            }
          }
        }
      ]
    },
		"keywords": {
			"patterns": [
				{
					"name": "keyword.control.cfg",
					"match": "^[a-z]+\\s"
				},
				{
					"name": "support.function",
					"match": "(\\s[a-z]+_)|(^[a-z]+_)|(^[a-z]+)|([a-z]+.cfg)"
				},
				{
					"name": "support.class",
					"match": "[a-zA-Z0-9+\\-_]"
				},
				{
					"name": "constant.numeric",
					"match": "\\s([0-9])+"
				}
			]
		},
		"strings": {
			"name": "string.quoted.double.cfg",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "variable",
					"match": "\\\\."
				}
			]
		},
		"comments": {
			"patterns": [
				{
					"name": "comment.line.double-slash",
					"match": "//(.*)$"
				},
				{
					"name": "comment.line.number-sign",
					"match": "#(.*)$"
				}
			]
		}
	}
}