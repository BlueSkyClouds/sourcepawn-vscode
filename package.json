{
  "name": "sourcepawn-vscode",
  "displayName": "SourcePawn",
  "description": "SourcePawn highlighting, autocompletion and much more",
  "version": "2.6.0",
  "publisher": "Sarrus",
  "main": "./dist/spIndex",
  "icon": "sm.png",
  "homepage": "https://github.com/Sarrus1/sourcepawn-vscode/wiki",
  "bugs": {
    "url": "https://github.com/Sarrus1/sourcepawn-vscode/issues"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/Sarrus1/sourcepawn-vscode.git"
  },
  "engines": {
    "vscode": "^1.14.0"
  },
  "categories": [
    "Programming Languages",
    "Snippets",
    "Linters",
    "Formatters"
  ],
  "keywords": [
    "SourcePawn",
    "SourceMod",
    "AlliedMods",
    "AlliedModders",
    "multi-root ready"
  ],
  "activationEvents": [
    "onLanguage:sourcepawn",
    "onCommand:sourcepawn-vscode.createTask",
    "onCommand:sourcepawn-vscode.createScript",
    "onCommand:sourcepawn-vscode.createREADME",
    "onCommand:sourcepawn-vscode.createMaster",
    "onCommand:sourcepawn-vscode.createProject",
    "onCommand:sourcepawn-vscode.compileSM",
    "onCommand:sourcepawn-vscode.uploadToServer",
    "onCommand:sourcepawn-vscode.refreshPlugins",
    "onCommand:sourcepawn-vscode.insertParameters",
    "onCommand:sourcepawn-vscode.setFileAsMain",
    "onCommand:sourcepawn-vscode.createChangelog"
  ],
  "contributes": {
    "commands": [
      {
        "command": "sourcepawn-vscode.createTask",
        "title": "SM Create Task File",
        "category": "Project"
      },
      {
        "command": "sourcepawn-vscode.createScript",
        "title": "SM Create Script File",
        "category": "Project"
      },
      {
        "command": "sourcepawn-vscode.createREADME",
        "title": "SM Create README File",
        "category": "Project"
      },
      {
        "command": "sourcepawn-vscode.createMaster",
        "title": "SM Create GitHub Actions",
        "category": "Project"
      },
      {
        "command": "sourcepawn-vscode.createProject",
        "title": "SM Create Project",
        "category": "Project"
      },
      {
        "command": "sourcepawn-vscode.uploadToServer",
        "title": "SM Upload to Server",
        "category": "Project"
      },
      {
        "command": "sourcepawn-vscode.refreshPlugins",
        "title": "SM Refresh Server Plugins",
        "category": "Project"
      },
      {
        "command": "sourcepawn-vscode.compileSM",
        "title": "SM Compile file",
        "category": "ShortcutMenuBar",
        "icon": {
          "light": "fileicons/images/compile.svg",
          "dark": "fileicons/images/compile.svg"
        }
      },
      {
        "command": "sourcepawn-vscode.insertParameters",
        "title": "SM Insert Function Parameters",
        "category": "Project"
      },
      {
        "command": "sourcepawn-vscode.setFileAsMain",
        "title": "SM Set current file as main",
        "category": "Project"
      },
      {
        "command": "sourcepawn-vscode.installSM",
        "title": "SM Install sourcemod",
        "category": "Project"
      },
      {
        "command": "sourcepawn-vscode.createChangelog",
        "title": "Create Changelog",
        "category": "Project"
      }
    ],
    "menus": {
      "editor/context": [
        {
          "when": "resourceLangId == sourcepawn",
          "command": "sourcepawn-vscode.compileSM"
        },
        {
          "when": "resourceLangId == sourcepawn",
          "command": "sourcepawn-vscode.setFileAsMain"
        }
      ],
      "explorer/context": [
        {
          "when": "resourceLangId == sourcepawn",
          "command": "sourcepawn-vscode.compileSM"
        },
        {
          "when": "resourceLangId == sourcepawn",
          "command": "sourcepawn-vscode.setFileAsMain"
        }
      ],
      "editor/title": [
        {
          "when": "resourceLangId == sourcepawn && config.sourcepawn.showCompileIconInEditorTitleMenu",
          "command": "sourcepawn-vscode.compileSM",
          "group": "navigation@1"
        }
      ]
    },
    "keybindings": [
      {
        "command": "sourcepawn-vscode.compileSM",
        "key": "ctrl+shift+d",
        "mac": "cmd+shift+d",
        "when": "resourceLangId == sourcepawn"
      },
      {
        "command": "sourcepawn-vscode.insertParameters",
        "key": "ctrl+shift+i",
        "mac": "cmd+shift+i",
        "when": "editorTextFocus && resourceLangId == sourcepawn && parameterHintsVisible"
      }
    ],
    "configuration": {
      "type": "object",
      "title": "SourcePawn configuration",
      "properties": {
        "sourcepawn.SourcemodHome": {
          "type": "string",
          "description": "The location of the SourceMod API include files found in addons/sourcemod/scripting/include",
          "scope": "resource"
        },
        "sourcepawn.AuthorName": {
          "type": "string",
          "description": "The name of the plugin's author (you)."
        },
        "sourcepawn.GithubName": {
          "type": "string",
          "description": "The GitHub username of the plugin's author (you)."
        },
        "sourcepawn.SpcompPath": {
          "type": "string",
          "description": "The location of the SourceMod compiler",
          "scope": "resource"
        },
        "sourcepawn.MainPath": {
          "type": "string",
          "description": "The location of the main.sp file for projects with sub-scripting files, which allows the linter and the compiler to work correctly. You should use this setting per workspace.",
          "scope": "resource"
        },
        "sourcepawn.MainPathCompilation": {
          "type": "boolean",
          "default": true,
          "description": "Whether the compile button always compiles the MainPath file (true) or the currently opened file (false).",
          "scope": "resource"
        },
        "sourcepawn.showCompileIconInEditorTitleMenu": {
          "type": "boolean",
          "default": true,
          "description": "Whether to show the 'Compile Code' icon in editor title menu."
        },
        "sourcepawn.refreshAfterSuccessfulUpload": {
          "type": "boolean",
          "default": false,
          "description": "Should the plugins list on the server be refreshed with `sm plugins refresh` when the upload command executed successfully.",
          "scope": "resource"
        },
        "sourcepawn.uploadAfterSuccessfulCompile": {
          "type": "boolean",
          "default": false,
          "description": "Should the upload command be executed on a successful compile.",
          "scope": "resource"
        },
        "sourcepawn.enableLinter": {
          "type": "boolean",
          "default": true,
          "description": "Toggle the linter on or off.",
          "scope": "resource"
        },
        "sourcepawn.optionalIncludeDirsPaths": {
          "type": "array",
          "default": [],
          "description": "Optional additional include folders paths for the compiler and the linter. Use this if you know what you are doing. Leave blank to disable.",
          "scope": "resource"
        },
        "sourcepawn.compilerOptions": {
          "type": "array",
          "default": [
            "-O2",
            "-v2"
          ],
          "description": "SourcePawn compiler options. Don't add paths here.",
          "scope": "resource"
        },
        "sourcepawn.linterCompilerOptions": {
          "type": "array",
          "default": [],
          "description": "SourcePawn linter compiler options. Don't add paths here.",
          "scope": "resource"
        },
        "sourcepawn.outputDirectoryPath": {
          "type": "string",
          "default": "",
          "description": "The path to the output directory for the compiled .smx file. Ends with a `/`.",
          "scope": "resource"
        },
        "sourcepawn.UploadOptions": {
          "type": "object",
          "default": {
            "user": "",
            "password": "",
            "host": "",
            "port": 21,
            "localRoot": "",
            "remoteRoot": "/public_html/remote-folder/",
            "include": [
              "**"
            ],
            "exclude": [
              "scripting/**/",
              ".vscode/**/",
              ".github/**/",
              ".gitignore",
              "*.md",
              ".git"
            ],
            "deleteRemote": false,
            "forcePasv": true,
            "sftp": false
          },
          "description": "Upload options for the FTP/SFTP client.",
          "scope": "resource"
        },
        "sourcepawn.SourceServerOptions": {
          "type": "object",
          "default": {
            "host": "",
            "port": 27015,
            "encoding": "ascii",
            "timeout": 1000,
            "password": ""
          },
          "description": "Options for the Source server to refresh the plugins on.",
          "scope": "resource"
        },
        "sourcepawn.formatterSettings": {
          "type": "array",
          "default": [
            "BasedOnStyle: Google",
            "AlignArrayOfStructures: Left",
            "AlignConsecutiveAssignments: AcrossComments",
            "AlignConsecutiveBitFields: AcrossComments",
            "AlignConsecutiveDeclarations: AcrossComments",
            "AlignConsecutiveMacros: AcrossComments",
            "AlignOperands: AlignAfterOperator",
            "AllowShortBlocksOnASingleLine: Always",
            "AllowShortCaseLabelsOnASingleLine: true",
            "AllowShortFunctionsOnASingleLine: Inline",
            "AllowShortIfStatementsOnASingleLine: AllIfsAndElse",
            "AllowShortLambdasOnASingleLine: All",
            "AllowShortLoopsOnASingleLine: true",
            "BreakBeforeBinaryOperators: NonAssignment",
            "BreakBeforeBraces: Custom",
            "BraceWrapping: { AfterClass: true",
            "AfterCaseLabel: true",
            "AfterControlStatement: Always",
            "AfterEnum: true",
            "AfterFunction: true",
            "AfterNamespace: true",
            "AfterObjCDeclaration: false",
            "AfterStruct: true",
            "AfterUnion: true",
            "AfterExternBlock: true",
            "BeforeCatch: true",
            "BeforeElse: true",
            "BeforeLambdaBody: true",
            "BeforeWhile: true",
            "IndentBraces: false",
            "SplitEmptyFunction: false",
            "SplitEmptyRecord: false",
            "SplitEmptyNamespace: false }",
            "BreakBeforeConceptDeclarations: false",
            "BreakStringLiterals: false",
            "BreakBeforeTernaryOperators: true",
            "BreakConstructorInitializers: AfterColon",
            "BreakInheritanceList: AfterComma",
            "CommentPragmas: '@'",
            "ReflowComments: true",
            "MaxEmptyLinesToKeep: 1",
            "NamespaceIndentation: All",
            "DeriveLineEnding: true",
            "DerivePointerAlignment: false",
            "EmptyLineBeforeAccessModifier: LogicalBlock",
            "FixNamespaceComments: true",
            "CompactNamespaces: false",
            "ConstructorInitializerIndentWidth: ${TabSize}",
            "ContinuationIndentWidth: ${TabSize}",
            "Cpp11BracedListStyle: false",
            "SortIncludes: CaseInsensitive",
            "IncludeBlocks: Preserve",
            "SpaceAfterCStyleCast: false",
            "SpaceAfterLogicalNot: false",
            "SpaceBeforeAssignmentOperators: true",
            "SpaceBeforeCaseColon: false",
            "SpaceBeforeCpp11BracedList: false",
            "SpaceInEmptyBlock: false",
            "SpacesInCStyleCastParentheses: false",
            "SpaceInEmptyParentheses: false",
            "SpacesInConditionalStatement: false",
            "SpacesInContainerLiterals: true",
            "SpacesInParentheses: false",
            "SpacesInSquareBrackets: false",
            "SpaceBeforeRangeBasedForLoopColon: true",
            "SpaceBeforeSquareBrackets: false",
            "SpaceBeforeCtorInitializerColon: true",
            "SpaceBeforeInheritanceColon: true",
            "SpaceBeforeParens: ControlStatementsExceptControlMacros",
            "IndentPPDirectives: BeforeHash",
            "IndentAccessModifiers: false",
            "IndentCaseBlocks: false",
            "IndentCaseLabels: true",
            "ColumnLimit: 0",
            "IndentRequires: true",
            "IndentExternBlock: Indent",
            "IndentGotoLabels: false",
            "IndentWidth: ${TabSize}",
            "IndentWrappedFunctionNames: true",
            "Language: Cpp",
            "SpacesBeforeTrailingComments: ${TabSize}",
            "TabWidth: ${TabSize}",
            "UseTab: Always"
          ],
          "description": "Settings for the formatter. Any setting supported by Clang Format can be used here.",
          "scope": "resource"
        },
        "sourcepawn.trace.server": {
          "type": "string",
          "enum": [
            "off",
            "messages",
            "verbose"
          ],
          "default": "off",
          "description": "Traces the communication between VSCode and the language server service."
        }
      }
    },
    "iconThemes": [
      {
        "id": "sourcepawn",
        "label": "SourcePawn",
        "path": "./fileicons/sourcepawn-icon-theme.json"
      }
    ],
    "languages": [
      {
        "id": "sourcepawn",
        "aliases": [
          "SourcePawn",
          "sourcepawn"
        ],
        "extensions": [
          ".sp",
          ".inc"
        ],
        "configuration": "./LanguageConfigurations/SPConfiguration.json"
      },
      {
        "id": "sp-translations",
        "aliases": [
          "SourcePawn Translations",
          "Phrases"
        ],
        "extensions": [
          ".phrases.txt"
        ],
        "configuration": "./LanguageConfigurations/SPMiscConfiguration.json"
      },
      {
        "id": "sp-gamedata",
        "aliases": [
          "SourcePawn Gamedata",
          "Gamedata"
        ],
        "extensions": [
          ".games.txt"
        ],
        "configuration": "./LanguageConfigurations/SPMiscConfiguration.json"
      },
      {
        "id": "valve-cfg",
        "aliases": [
          "Valve CFG",
          "CFG"
        ],
        "extensions": [
          ".cfg"
        ],
        "configuration": "./LanguageConfigurations/SPMiscConfiguration.json"
      },
      {
        "id": "valve-ini",
        "aliases": [
          "Valve INI",
          "INI"
        ],
        "extensions": [
          ".ini"
        ],
        "configuration": "./LanguageConfigurations/SPMiscConfiguration.json"
      },
      {
        "id": "sourcemod-kv",
        "aliases": [
          "Sourcemod KV",
          "KV"
        ],
        "extensions": [
          ".kv"
        ],
        "configuration": "./LanguageConfigurations/SPMiscConfiguration.json"
      }
    ],
    "grammars": [
      {
        "language": "sourcepawn",
        "scopeName": "source.sourcepawn",
        "path": "./syntaxes/sourcepawn.tmLanguage.json"
      },
      {
        "language": "sp-translations",
        "scopeName": "text.sourcepawn-misc",
        "path": "./syntaxes/sp-translations.tmLanguage.json"
      },
      {
        "language": "sp-gamedata",
        "scopeName": "text.sourcepawn-misc",
        "path": "./syntaxes/sp-gamedata.tmLanguage.json"
      },
      {
        "language": "valve-cfg",
        "scopeName": "text.sourcepawn-misc",
        "path": "./syntaxes/sourcepawn-misc.tmLanguage.json"
      },
      {
        "language": "valve-ini",
        "scopeName": "text.sourcepawn-misc",
        "path": "./syntaxes/sourcepawn-misc.tmLanguage.json"
      },
      {
        "language": "sourcemod-kv",
        "scopeName": "text.sourcepawn-misc",
        "path": "./syntaxes/sourcepawn-misc.tmLanguage.json"
      }
    ],
    "snippets": [
      {
        "language": "sourcepawn",
        "path": "./snippets/snippets.json"
      }
    ]
  },
  "dependencies": {
    "@types/vscode": "^1.53.0",
    "clang-format": "^1.5.0",
    "decompress": "^4.2.1",
    "ftp-deploy": "^2.4.1",
    "glob": "^7.1.2",
    "n-readlines": "^1.0.1",
    "prettier": "2.2.1",
    "rcon-srcds": "^2.0.1",
    "vscode-uri": "^3.0.2",
    "wget-improved": "^3.2.1"
  },
  "devDependencies": {
    "@types/mocha": "^8.2.2",
    "@types/node": "^8.0.14",
    "mocha": "^8.3.2",
    "ts-loader": "^9.2.5",
    "typescript": "^4.2.2",
    "vscode-test": "^1.5.2",
    "webpack": "^5.48.0",
    "webpack-cli": "^4.7.2",
    "nyc": "^15.1.0",
    "@istanbuljs/nyc-config-typescript": "^1.0.1"
  },
  "scripts": {
    "vscode:prepublish": "webpack --mode production",
    "compile": "tsc -b tsconfig.json",
    "watch": "webpack --mode development --watch",
    "webpack": "webpack --mode development",
    "postinstall": "cd client && npm install && cd ..",
    "test": "npm run compile && node ./dist/test/runTest.js"
  }
}
