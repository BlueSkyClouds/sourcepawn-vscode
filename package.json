{
  "name": "sourcepawn-vscode",
  "displayName": "SourcePawn",
  "description": "SourcePawn highlighting, autocompletion and much more",
  "version": "1.12.7",
  "publisher": "Sarrus",
  "main": "client/out/spIndex",
  "icon": "sm.png",
  "repository": {
    "type": "git",
    "url": "https://github.com/Sarrus1/sourcepawn-vscode.git"
  },
  "engines": {
    "vscode": "^1.14.0"
  },
  "categories": [
    "Programming Languages"
  ],
  "activationEvents": [
    "onLanguage:sourcepawn",
    "onCommand:sourcepawn-vscode.createTask",
    "onCommand:sourcepawn-vscode.createScript",
    "onCommand:sourcepawn-vscode.createREADME",
    "onCommand:sourcepawn-vscode.createMaster",
    "onCommand:sourcepawn-vscode.createProject",
    "onCommand:sourcepawn-vscode.compileSM",
    "onCommand:sourcepawn-vscode.uploadToServer",
    "onCommand:sourcepawn-vscode.refreshPlugins",
    "onCommand:sourcepawn-vscode.insertParameters",
    "onCommand:sourcepawn-vscode.setFileAsMain"
  ],
  "contributes": {
    "commands": [
      {
        "command": "sourcepawn-vscode.createTask",
        "title": "SM Create Task File",
        "category": "Project"
      },
      {
        "command": "sourcepawn-vscode.createScript",
        "title": "SM Create Script File",
        "category": "Project"
      },
      {
        "command": "sourcepawn-vscode.createREADME",
        "title": "SM Create README File",
        "category": "Project"
      },
      {
        "command": "sourcepawn-vscode.createMaster",
        "title": "SM Create GitHub Actions",
        "category": "Project"
      },
      {
        "command": "sourcepawn-vscode.createProject",
        "title": "SM Create Project",
        "category": "Project"
      },
      {
        "command": "sourcepawn-vscode.uploadToServer",
        "title": "SM Upload to Server",
        "category": "Project"
      },
      {
        "command": "sourcepawn-vscode.refreshPlugins",
        "title": "SM Refresh Server Plugins",
        "category": "Project"
      },
      {
        "command": "sourcepawn-vscode.compileSM",
        "title": "SM Compile file",
        "category": "ShortcutMenuBar",
        "icon": {
          "light": "fileicons/images/compile.svg",
          "dark": "fileicons/images/compile.svg"
        }
      },
      {
        "command": "sourcepawn-vscode.insertParameters",
        "title": "SM Insert Function Parameters",
        "category": "Project"
      },
      {
        "command": "sourcepawn-vscode.setFileAsMain",
        "title": "SM Set current file as main",
        "category": "Project"
      },
      {
        "command": "sourcepawn-vscode.installSM",
        "title": "SM Install sourcemod",
        "category": "Project"
      }
    ],
    "menus": {
      "editor/context": [
        {
          "when": "resourceLangId == sourcepawn",
          "command": "sourcepawn-vscode.compileSM"
        },
        {
          "when": "resourceLangId == sourcepawn",
          "command": "sourcepawn-vscode.setFileAsMain"
        }
      ],
      "explorer/context": [
        {
          "when": "resourceLangId == sourcepawn",
          "command": "sourcepawn-vscode.compileSM"
        },
        {
          "when": "resourceLangId == sourcepawn",
          "command": "sourcepawn-vscode.setFileAsMain"
        }
      ],
      "editor/title": [
        {
          "when": "editorTextFocus && resourceLangId == sourcepawn && config.sourcepawn.showCompileIconInEditorTitleMenu",
          "command": "sourcepawn-vscode.compileSM",
          "group": "navigation@1"
        }
      ]
    },
    "keybindings": [
      {
        "command": "sourcepawn-vscode.compileSM",
        "key": "ctrl+shift+d",
        "mac": "cmd+shift+d",
        "when": "editorTextFocus && resourceLangId == sourcepawn"
      },
      {
        "command": "sourcepawn-vscode.insertParameters",
        "key": "ctrl+shift+i",
				"mac": "cmd+shift+i",
        "when": "editorTextFocus && resourceLangId == sourcepawn && parameterHintsVisible"
      }
    ],
    "configuration": {
      "type": "object",
      "title": "SourcePawn configuration",
      "properties": {
        "sourcepawn.SourcemodHome": {
          "type": "string",
          "description": "The location of the SourceMod API include files found in addons/sourcemod/scripting/include"
        },
        "sourcepawn.AuthorName": {
          "type": "string",
          "description": "The name of the plugin's author (you)."
        },
        "sourcepawn.GithubName": {
          "type": "string",
          "description": "The GitHub username of the plugin's author (you)."
        },
        "sourcepawn.SpcompPath": {
          "type": "string",
          "description": "The location of the SourceMod compiler"
        },
        "sourcepawn.MainPath": {
          "type": "string",
          "description": "The location of the main.sp file for projects with sub-scripting files, which allows the linter and the compiler to work correctly. You should use this setting per workspace."
        },
        "sourcepawn.showCompileIconInEditorTitleMenu": {
          "type": "boolean",
          "default": true,
          "description": "Whether to show the 'Compile Code' icon in editor title menu."
        },
        "sourcepawn.refreshAfterSuccessfulUpload": {
          "type": "boolean",
          "default": false,
          "description": "Should the plugins list on the server be refreshed with `sm plugins refresh` when the upload command executed successfully."
        },
        "sourcepawn.uploadAfterSuccessfulCompile": {
          "type": "boolean",
          "default": false,
          "description": "Should the upload command be executed on a successful compile."
        },
        "sourcepawn.enableLinter": {
          "type": "boolean",
          "default": true,
          "description": "Toggle the linter on or off."
        },
        "sourcepawn.optionalIncludeDirsPaths": {
          "type": "array",
          "default": [],
          "description": "Optional additional include folders paths for the compiler and the linter. Use this if you know what you are doing. Leave blank to disable."
        },
        "sourcepawn.compilerOptions": {
          "type": "array",
          "default": [
            "-O2",
            "-v2"
          ],
          "description": "SourcePawn compiler options. Don't add paths here."
        },
        "sourcepawn.linterCompilerOptions": {
          "type": "array",
          "default": [],
          "description": "SourcePawn linter compiler options. Don't add paths here."
        },
				"sourcepawn.outputDirectoryPath": {
          "type": "string",
          "default": "",
          "description": "The path to the output directory for the compiled .smx file. Ends with a `/`."
        },
        "sourcepawn.UploadOptions": {
          "type": "object",
          "default": {
            "user": "",
            "password": "",
            "host": "",
            "port": 21,
            "localRoot": "",
            "remoteRoot": "/public_html/remote-folder/",
            "include": [
              "**"
            ],
            "exclude": [
              "scripting/**/",
              ".vscode/**/",
              ".github/**/",
              ".gitignore",
              "*.md",
              ".git"
            ],
            "deleteRemote": false,
            "forcePasv": true,
            "sftp": false
          },
          "description": "Upload options for the FTP/SFTP client."
        },
        "sourcepawn.SourceServerOptions": {
          "type": "object",
          "default": {
            "host": "",
            "port": 27015,
            "encoding": "ascii",
            "timeout": 1000,
            "password": ""
          },
          "description": "Options for the Source server to refresh the plugins on."
        },
        "sourcepawn.formatterSettings": {
          "type": "array",
          "default": [
            "AlignOperands: 'true'",
            "AlignTrailingComments: 'true'",
            "AllowAllArgumentsOnNextLine: 'false'",
            "AllowAllConstructorInitializersOnNextLine: 'false'",
            "AllowAllParametersOfDeclarationOnNextLine: 'false'",
            "AllowShortBlocksOnASingleLine: 'true'",
            "AllowShortCaseLabelsOnASingleLine: 'true'",
            "AlwaysBreakAfterDefinitionReturnType: None",
            "AlwaysBreakAfterReturnType: None",
            "AlwaysBreakBeforeMultilineStrings: 'false'",
            "BinPackArguments: 'false'",
            "BinPackParameters: 'false'",
            "BreakBeforeBraces: Allman",
            "BreakBeforeTernaryOperators: 'false'",
            "BreakStringLiterals: 'false'",
            "ColumnLimit: '0'",
            "ContinuationIndentWidth: '2'",
            "IndentWidth: '${TabSize}'",
            "MaxEmptyLinesToKeep: '2'",
            "MaxEmptyLinesToKeep: '2'",
            "SpaceAfterLogicalNot: 'false'",
            "SpaceBeforeParens: Never",
            "SpaceBeforeRangeBasedForLoopColon: 'false'",
            "SpaceInEmptyParentheses: 'false'",
            "TabWidth: '2'",
            "UseTab: '${UseTab}'"
          ],
          "description": "Optional additional include folders paths for the compiler and the linter. Use this if you know what you are doing. Leave blank to disable."
        },
        "sourcepawn.trace.server": {
          "type": "string",
          "enum": [
            "off",
            "messages",
            "verbose"
          ],
          "default": "off",
          "description": "Traces the communication between VSCode and the language server service."
        }
      }
    },
    "iconThemes": [
      {
        "id": "sourcepawn",
        "label": "SourcePawn",
        "path": "./fileicons/sourcepawn-icon-theme.json"
      }
    ],
    "languages": [
      {
        "id": "sourcepawn",
        "aliases": [
          "SourcePawn",
          "sourcepawn"
        ],
        "extensions": [
          ".sp",
          ".inc"
        ],
        "configuration": "./LanguageConfigurations/SPConfiguration.json"
      },
      {
        "id": "sp-translations",
        "aliases": [
          "SourcePawn Translations",
          "Phrases"
        ],
        "extensions": [
          ".phrases.txt"
        ],
        "configuration": "./LanguageConfigurations/SPMiscConfiguration.json"
      },
      {
        "id": "sp-gamedata",
        "aliases": [
          "SourcePawn Gamedata",
          "Gamedata"
        ],
        "extensions": [
          ".games.txt"
        ],
        "configuration": "./LanguageConfigurations/SPMiscConfiguration.json"
      },
      {
        "id": "valve-cfg",
        "aliases": [
          "Valve CFG",
          "CFG"
        ],
        "extensions": [
          ".cfg"
        ],
        "configuration": "./LanguageConfigurations/SPMiscConfiguration.json"
      },
      {
        "id": "valve-ini",
        "aliases": [
          "Valve INI",
          "INI"
        ],
        "extensions": [
          ".ini"
        ],
        "configuration": "./LanguageConfigurations/SPMiscConfiguration.json"
      }
    ],
    "grammars": [
      {
        "language": "sourcepawn",
        "scopeName": "source.sourcepawn",
        "path": "./syntaxes/sourcepawn.tmLanguage.json"
      },
      {
        "language": "sp-translations",
        "scopeName": "text.sourcepawn-misc",
        "path": "./syntaxes/sp-translations.tmLanguage.json"
      },
      {
        "language": "sp-gamedata",
        "scopeName": "text.sourcepawn-misc",
        "path": "./syntaxes/sp-gamedata.tmLanguage.json"
      },
      {
        "language": "valve-cfg",
        "scopeName": "text.sourcepawn-misc",
        "path": "./syntaxes/sourcepawn-misc.tmLanguage.json"
      }
    ],
    "snippets": [
      {
        "language": "sourcepawn",
        "path": "./snippets/snippets.json"
      }
    ]
  },
  "dependencies": {
    "@types/vscode": "^1.53.0",
    "clang-format": "^1.5.0",
    "decompress": "^4.2.1",
    "ftp-deploy": "^2.4.1",
    "glob": "^7.1.2",
    "n-readlines": "^1.0.1",
    "prettier": "2.2.1",
    "rcon-srcds": "^2.0.1",
    "vscode-uri": "^3.0.2",
    "wget-improved": "^3.2.1"
  },
  "devDependencies": {
    "@types/mocha": "^8.2.2",
    "@types/node": "^8.0.14",
    "mocha": "^8.3.2",
    "typescript": "^4.2.2",
    "vscode-test": "^1.5.2"
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -b tsconfig.json",
    "watch": "tsc -b -w",
    "postinstall": "cd client && npm install && cd ..",
    "test": "node ./client/out/test/runTest.js"
  }
}
